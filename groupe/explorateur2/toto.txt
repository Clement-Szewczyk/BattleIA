// Génération d'une liste de déplacements pour aller vers le 2 le plus proche 
                // (on suppose que le robot est au centre du tableau)
                chemin.Clear();
                if (posxMin != -1 && posyMin != -1) {
                    // on se déplace en x
                    if (posxMin > posX) {
                        for (int i = 0; i < posxMin - posX; i++) {
                            chemin.Add(MoveDirection.South);
                        }
                    }
                    else if (posxMin < posX) {
                        for (int i = 0; i < posX - posxMin; i++) {
                            chemin.Add(MoveDirection.North);
                        }
                    }
                    // on se déplace en y
                    if (posyMin > posY) {
                        for (int i = 0; i < posyMin - posY; i++) {
                            chemin.Add(MoveDirection.West);
                        }
                    }
                    else if (posyMin < posY) {
                        for (int i = 0; i < posY - posyMin; i++) {
                            chemin.Add(MoveDirection.East);
                        }
                    }
                }
                else {
                    // on ne trouve pas de 2, on va donc chercher un 4
                    // on parcourt le tableau position
                    for (int i = 0; i < position.GetLength(0); i++) {
                        for (int j = 0; j < position.GetLength(1); j++) {
                            if (position[i, j] == 4) { // si on trouve un 4
                                // on calcule la distance entre le 4 et le robot
                                int ecart = Math.Abs(i - posX) + Math.Abs(j - posY);
                                //Console.WriteLine("Distance entre (" + i + ", " + j + ") et (" + posX + ", " + posY + ") = " + ecart);
                                if (ecart < distanceMin) { // si la distance est plus petite que la distance minimale
                                    distanceMin = ecart; // on met à jour la distance minimale
                                    posxMin = i; // on met à jour la position x du 4 le plus proche
                                    posyMin = j; // on met à jour la position y du 4 le plus proche
                                }
                            }
                        }
                    }

                }